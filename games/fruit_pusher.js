/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: 
@author: 
@tags: []
@img: ""
@addedOn: 2024-00-00
*/

const player = "p"
const apple = "a"
const banana = "b"
const orange = "o"
const goal = "g";
const wall = "w";
const trophy = "t";

setLegend(
  [ player, bitmap`
.......000......
.......000......
......00000.....
.......L1L......
......L11L......
......L111L.....
...L..L818L..L..
...LLLL111LLLL..
......L555L.....
......L111L.....
.....L1111L.....
.....L111L......
......LLL.......
......L.L.......
.....LL.LL......
................` ],
  [ apple, bitmap`
................
..........C.....
.........C......
.........C......
........C.......
......333333....
.....33333333...
.....33333333...
.....33333333...
.....33333333...
.....33333333...
.....33333333...
......333333....
................
................
................` ],
  [ banana, bitmap`
................
................
................
..C.............
..66............
..666...........
..6666..........
...6666.........
...666666.......
....666666......
.....666666.....
......666666....
.......666666...
.........6666C..
................
................` ],
  [ orange, bitmap`
................
................
................
................
................
......99CC9.....
.....9999999....
....999999999...
....999999999...
....999999999...
....999999999...
....999999999...
.....9999999....
......99999.....
................
................` ],
  [ trophy, bitmap`
................
................
.....6666266....
.....6666626....
....626006626...
...6.6260666.6..
...6.6620666.6..
...6.6660666.6..
....666000666...
.....6666626....
......66666.....
.......666......
.......666......
.......666......
.......666......
.....6666666....`],
  [ goal, bitmap`
................
..4.4.4..4..444.
..4.4.4..4..4.4.
..44444..4..4.4.
................
................
.4.4.4..4..444..
.4.4.4..4..4.4..
.44444..4..4.4..
................
................
..4.4.4..4..444.
..4.4.4..4..4.4.
..44444..4..4.4.
................
................`],
  [ wall, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`]
);

setSolids([])

let level = 0
const levels = [
  map`
p..
.ag
...`,
  map`
p.g
.b.
...`,
  map`
.p..g
.o...
.....
...bg`,
  map`
p....
.ob..
.....
g...g`,
  map`
...p..g
b......
....go.
......a
g......`,
  map`
.p..g...
....b..g
........
...o....
.b.aga..
g....g..`,
  map`
wgw.p.wgw
w.w...w.w
.........
.....b...
.w.o...w.
.........
...www...`,
  map`
gwwwwwwww
.b.p....w
.b..waw.w
..w.b...w
..w...w.w
g...g...w
wwwwwwwgw`,
  map`
wwwwwwwww
...p.wwww
.a....a.w
.....b..g
..www...w
..gg.o..w
wwwwwwwgw`,
  map`
wwwwgwwww
...p.....
gw...a.b.
.w...www.
.w..o....
.b...wwww
...b..ggg`, //start new maps here
  map`
g..www.....
...wwp.....
...w..b.wwg
.b...b....w
...wwww.a.w
...wg.....w
go.wwwww..g
..wwwwwwwww`,
  map`
w..wwwwwww
w..g...b.w
wb.p.....w
w...w.ww.w
w...wow...
g...w.w...
w.....wwwg
w..wwwwwww`,
  map`
...wwww.g.g
.bpwg......
...wwwwaow.
...wg....w.
.b.www...w.
...b.......
..wwwww...g
.........ww`,
  map`
......wwww..
...pa.wg....
......ww..w.
..w.......wa
g.w.b.....w.
..w....o.ww.
o.www..wwww.
..wg.....g.g
wwwwwwwwwwww`,
  map`
..g.a...wg
..ww..o.w.
...b......
.b...pa...
..w.wwww.a
..w.wg....
..w.www...
..ggwg....`,
  map`
w....b...g.
wwg.....ww.
www..g.....
ww..www...o
ww......a..
wp.b....o..
ww...www...
ww...wg....
wg..a.....g`,
  map`
..wpw....g..
..w.w...a.wo
..w.wgw...w.
o.wbwwww..w.
..w.wwg..aw.
..w.wwww..w.
..........w.
..........w.
g.wwwwww..wg`,
  map`
gp...b.....g
..t......t..
..bww..ww...
...wga.gw...
.....gg....o
.a...gg.o...
...wg..gw...
...wwb.ww...
..t......t..
g.....a....g`
]

const currentLevel = levels[level];
setMap(currentLevel);

setSolids([ player, apple, banana, orange, wall, trophy ]); // other sprites cannot go inside of these sprites

setPushables({
  [ player ]: [apple, banana, orange, trophy]
})

onInput("w", () => {
  getFirst(player).y -= 1
})
onInput("s", () => {
  getFirst(player).y += 1
})
onInput("a", () => {
  getFirst(player).x -= 1
})
onInput("d", () => {
  getFirst(player).x += 1
})

onInput("j", () => {
  const currentLevel = levels[level]; // get the original map of the level

  // make sure the level exists before we load it
  if (currentLevel !== undefined) {
    clearText("");
    setMap(currentLevel);
  }
});

afterInput(() => {
  // count the number of tiles with goals
  const targetNumber = tilesWith(goal).length;
  
  // count the number of tiles with goals and boxes
  const numberCovered = tilesWith(goal, apple).length + tilesWith(goal, banana).length + tilesWith(goal, orange).length + tilesWith(goal, trophy).length;

  // if the number of goals is the same as the number of goals covered
  // all goals are covered and we can go to the next level
  if (numberCovered === targetNumber) {
    // increase the current level number
    level = level + 1;

    const currentLevel = levels[level];

    // make sure the level exists and if so set the map
    // otherwise, we have finished the last level, there is no level
    // after the last level
    if (currentLevel !== undefined) {
      setMap(currentLevel);
    } else {
      addText("You are the winner!", { y: 4, color: color`3` });
    }
  }
});